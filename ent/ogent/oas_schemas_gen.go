// Code generated by ogen, DO NOT EDIT.

package ogent

import (
	"time"

	"github.com/go-faster/jx"
	"github.com/google/uuid"
)

// Ref: #/components/schemas/Access_ApprovalsRead
type AccessApprovalsRead struct {
	ID           uuid.UUID   `json:"id"`
	AccessTime   time.Time   `json:"access_time"`
	Approved     bool        `json:"approved"`
	RolledBack   bool        `json:"rolled_back"`
	RollbackTime OptDateTime `json:"rollback_time"`
	EndTime      time.Time   `json:"end_time"`
	RequestID    uuid.UUID   `json:"request_id"`
}

// GetID returns the value of ID.
func (s *AccessApprovalsRead) GetID() uuid.UUID {
	return s.ID
}

// GetAccessTime returns the value of AccessTime.
func (s *AccessApprovalsRead) GetAccessTime() time.Time {
	return s.AccessTime
}

// GetApproved returns the value of Approved.
func (s *AccessApprovalsRead) GetApproved() bool {
	return s.Approved
}

// GetRolledBack returns the value of RolledBack.
func (s *AccessApprovalsRead) GetRolledBack() bool {
	return s.RolledBack
}

// GetRollbackTime returns the value of RollbackTime.
func (s *AccessApprovalsRead) GetRollbackTime() OptDateTime {
	return s.RollbackTime
}

// GetEndTime returns the value of EndTime.
func (s *AccessApprovalsRead) GetEndTime() time.Time {
	return s.EndTime
}

// GetRequestID returns the value of RequestID.
func (s *AccessApprovalsRead) GetRequestID() uuid.UUID {
	return s.RequestID
}

// SetID sets the value of ID.
func (s *AccessApprovalsRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAccessTime sets the value of AccessTime.
func (s *AccessApprovalsRead) SetAccessTime(val time.Time) {
	s.AccessTime = val
}

// SetApproved sets the value of Approved.
func (s *AccessApprovalsRead) SetApproved(val bool) {
	s.Approved = val
}

// SetRolledBack sets the value of RolledBack.
func (s *AccessApprovalsRead) SetRolledBack(val bool) {
	s.RolledBack = val
}

// SetRollbackTime sets the value of RollbackTime.
func (s *AccessApprovalsRead) SetRollbackTime(val OptDateTime) {
	s.RollbackTime = val
}

// SetEndTime sets the value of EndTime.
func (s *AccessApprovalsRead) SetEndTime(val time.Time) {
	s.EndTime = val
}

// SetRequestID sets the value of RequestID.
func (s *AccessApprovalsRead) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

func (*AccessApprovalsRead) readAccessApprovalsRes() {}

// Ref: #/components/schemas/AccessCreate
type AccessCreate struct {
	ID           uuid.UUID   `json:"id"`
	AccessTime   time.Time   `json:"access_time"`
	Approved     bool        `json:"approved"`
	RolledBack   bool        `json:"rolled_back"`
	RollbackTime OptDateTime `json:"rollback_time"`
	EndTime      time.Time   `json:"end_time"`
	RequestID    uuid.UUID   `json:"request_id"`
}

// GetID returns the value of ID.
func (s *AccessCreate) GetID() uuid.UUID {
	return s.ID
}

// GetAccessTime returns the value of AccessTime.
func (s *AccessCreate) GetAccessTime() time.Time {
	return s.AccessTime
}

// GetApproved returns the value of Approved.
func (s *AccessCreate) GetApproved() bool {
	return s.Approved
}

// GetRolledBack returns the value of RolledBack.
func (s *AccessCreate) GetRolledBack() bool {
	return s.RolledBack
}

// GetRollbackTime returns the value of RollbackTime.
func (s *AccessCreate) GetRollbackTime() OptDateTime {
	return s.RollbackTime
}

// GetEndTime returns the value of EndTime.
func (s *AccessCreate) GetEndTime() time.Time {
	return s.EndTime
}

// GetRequestID returns the value of RequestID.
func (s *AccessCreate) GetRequestID() uuid.UUID {
	return s.RequestID
}

// SetID sets the value of ID.
func (s *AccessCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAccessTime sets the value of AccessTime.
func (s *AccessCreate) SetAccessTime(val time.Time) {
	s.AccessTime = val
}

// SetApproved sets the value of Approved.
func (s *AccessCreate) SetApproved(val bool) {
	s.Approved = val
}

// SetRolledBack sets the value of RolledBack.
func (s *AccessCreate) SetRolledBack(val bool) {
	s.RolledBack = val
}

// SetRollbackTime sets the value of RollbackTime.
func (s *AccessCreate) SetRollbackTime(val OptDateTime) {
	s.RollbackTime = val
}

// SetEndTime sets the value of EndTime.
func (s *AccessCreate) SetEndTime(val time.Time) {
	s.EndTime = val
}

// SetRequestID sets the value of RequestID.
func (s *AccessCreate) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

func (*AccessCreate) createAccessRes() {}

// Ref: #/components/schemas/AccessList
type AccessList struct {
	ID           uuid.UUID   `json:"id"`
	AccessTime   time.Time   `json:"access_time"`
	Approved     bool        `json:"approved"`
	RolledBack   bool        `json:"rolled_back"`
	RollbackTime OptDateTime `json:"rollback_time"`
	EndTime      time.Time   `json:"end_time"`
	RequestID    uuid.UUID   `json:"request_id"`
}

// GetID returns the value of ID.
func (s *AccessList) GetID() uuid.UUID {
	return s.ID
}

// GetAccessTime returns the value of AccessTime.
func (s *AccessList) GetAccessTime() time.Time {
	return s.AccessTime
}

// GetApproved returns the value of Approved.
func (s *AccessList) GetApproved() bool {
	return s.Approved
}

// GetRolledBack returns the value of RolledBack.
func (s *AccessList) GetRolledBack() bool {
	return s.RolledBack
}

// GetRollbackTime returns the value of RollbackTime.
func (s *AccessList) GetRollbackTime() OptDateTime {
	return s.RollbackTime
}

// GetEndTime returns the value of EndTime.
func (s *AccessList) GetEndTime() time.Time {
	return s.EndTime
}

// GetRequestID returns the value of RequestID.
func (s *AccessList) GetRequestID() uuid.UUID {
	return s.RequestID
}

// SetID sets the value of ID.
func (s *AccessList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAccessTime sets the value of AccessTime.
func (s *AccessList) SetAccessTime(val time.Time) {
	s.AccessTime = val
}

// SetApproved sets the value of Approved.
func (s *AccessList) SetApproved(val bool) {
	s.Approved = val
}

// SetRolledBack sets the value of RolledBack.
func (s *AccessList) SetRolledBack(val bool) {
	s.RolledBack = val
}

// SetRollbackTime sets the value of RollbackTime.
func (s *AccessList) SetRollbackTime(val OptDateTime) {
	s.RollbackTime = val
}

// SetEndTime sets the value of EndTime.
func (s *AccessList) SetEndTime(val time.Time) {
	s.EndTime = val
}

// SetRequestID sets the value of RequestID.
func (s *AccessList) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

// Ref: #/components/schemas/AccessRead
type AccessRead struct {
	ID           uuid.UUID   `json:"id"`
	AccessTime   time.Time   `json:"access_time"`
	Approved     bool        `json:"approved"`
	RolledBack   bool        `json:"rolled_back"`
	RollbackTime OptDateTime `json:"rollback_time"`
	EndTime      time.Time   `json:"end_time"`
	RequestID    uuid.UUID   `json:"request_id"`
}

// GetID returns the value of ID.
func (s *AccessRead) GetID() uuid.UUID {
	return s.ID
}

// GetAccessTime returns the value of AccessTime.
func (s *AccessRead) GetAccessTime() time.Time {
	return s.AccessTime
}

// GetApproved returns the value of Approved.
func (s *AccessRead) GetApproved() bool {
	return s.Approved
}

// GetRolledBack returns the value of RolledBack.
func (s *AccessRead) GetRolledBack() bool {
	return s.RolledBack
}

// GetRollbackTime returns the value of RollbackTime.
func (s *AccessRead) GetRollbackTime() OptDateTime {
	return s.RollbackTime
}

// GetEndTime returns the value of EndTime.
func (s *AccessRead) GetEndTime() time.Time {
	return s.EndTime
}

// GetRequestID returns the value of RequestID.
func (s *AccessRead) GetRequestID() uuid.UUID {
	return s.RequestID
}

// SetID sets the value of ID.
func (s *AccessRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAccessTime sets the value of AccessTime.
func (s *AccessRead) SetAccessTime(val time.Time) {
	s.AccessTime = val
}

// SetApproved sets the value of Approved.
func (s *AccessRead) SetApproved(val bool) {
	s.Approved = val
}

// SetRolledBack sets the value of RolledBack.
func (s *AccessRead) SetRolledBack(val bool) {
	s.RolledBack = val
}

// SetRollbackTime sets the value of RollbackTime.
func (s *AccessRead) SetRollbackTime(val OptDateTime) {
	s.RollbackTime = val
}

// SetEndTime sets the value of EndTime.
func (s *AccessRead) SetEndTime(val time.Time) {
	s.EndTime = val
}

// SetRequestID sets the value of RequestID.
func (s *AccessRead) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

func (*AccessRead) readAccessRes() {}

// Ref: #/components/schemas/AccessUpdate
type AccessUpdate struct {
	ID           uuid.UUID   `json:"id"`
	AccessTime   time.Time   `json:"access_time"`
	Approved     bool        `json:"approved"`
	RolledBack   bool        `json:"rolled_back"`
	RollbackTime OptDateTime `json:"rollback_time"`
	EndTime      time.Time   `json:"end_time"`
	RequestID    uuid.UUID   `json:"request_id"`
}

// GetID returns the value of ID.
func (s *AccessUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetAccessTime returns the value of AccessTime.
func (s *AccessUpdate) GetAccessTime() time.Time {
	return s.AccessTime
}

// GetApproved returns the value of Approved.
func (s *AccessUpdate) GetApproved() bool {
	return s.Approved
}

// GetRolledBack returns the value of RolledBack.
func (s *AccessUpdate) GetRolledBack() bool {
	return s.RolledBack
}

// GetRollbackTime returns the value of RollbackTime.
func (s *AccessUpdate) GetRollbackTime() OptDateTime {
	return s.RollbackTime
}

// GetEndTime returns the value of EndTime.
func (s *AccessUpdate) GetEndTime() time.Time {
	return s.EndTime
}

// GetRequestID returns the value of RequestID.
func (s *AccessUpdate) GetRequestID() uuid.UUID {
	return s.RequestID
}

// SetID sets the value of ID.
func (s *AccessUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetAccessTime sets the value of AccessTime.
func (s *AccessUpdate) SetAccessTime(val time.Time) {
	s.AccessTime = val
}

// SetApproved sets the value of Approved.
func (s *AccessUpdate) SetApproved(val bool) {
	s.Approved = val
}

// SetRolledBack sets the value of RolledBack.
func (s *AccessUpdate) SetRolledBack(val bool) {
	s.RolledBack = val
}

// SetRollbackTime sets the value of RollbackTime.
func (s *AccessUpdate) SetRollbackTime(val OptDateTime) {
	s.RollbackTime = val
}

// SetEndTime sets the value of EndTime.
func (s *AccessUpdate) SetEndTime(val time.Time) {
	s.EndTime = val
}

// SetRequestID sets the value of RequestID.
func (s *AccessUpdate) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

func (*AccessUpdate) updateAccessRes() {}

// Ref: #/components/schemas/ApprovalCreate
type ApprovalCreate struct {
	ID           uuid.UUID   `json:"id"`
	Person       string      `json:"person"`
	ApprovedTime time.Time   `json:"approved_time"`
	Approved     bool        `json:"approved"`
	Revoked      bool        `json:"revoked"`
	RevokedTime  OptDateTime `json:"revoked_time"`
	RequestID    uuid.UUID   `json:"request_id"`
}

// GetID returns the value of ID.
func (s *ApprovalCreate) GetID() uuid.UUID {
	return s.ID
}

// GetPerson returns the value of Person.
func (s *ApprovalCreate) GetPerson() string {
	return s.Person
}

// GetApprovedTime returns the value of ApprovedTime.
func (s *ApprovalCreate) GetApprovedTime() time.Time {
	return s.ApprovedTime
}

// GetApproved returns the value of Approved.
func (s *ApprovalCreate) GetApproved() bool {
	return s.Approved
}

// GetRevoked returns the value of Revoked.
func (s *ApprovalCreate) GetRevoked() bool {
	return s.Revoked
}

// GetRevokedTime returns the value of RevokedTime.
func (s *ApprovalCreate) GetRevokedTime() OptDateTime {
	return s.RevokedTime
}

// GetRequestID returns the value of RequestID.
func (s *ApprovalCreate) GetRequestID() uuid.UUID {
	return s.RequestID
}

// SetID sets the value of ID.
func (s *ApprovalCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetPerson sets the value of Person.
func (s *ApprovalCreate) SetPerson(val string) {
	s.Person = val
}

// SetApprovedTime sets the value of ApprovedTime.
func (s *ApprovalCreate) SetApprovedTime(val time.Time) {
	s.ApprovedTime = val
}

// SetApproved sets the value of Approved.
func (s *ApprovalCreate) SetApproved(val bool) {
	s.Approved = val
}

// SetRevoked sets the value of Revoked.
func (s *ApprovalCreate) SetRevoked(val bool) {
	s.Revoked = val
}

// SetRevokedTime sets the value of RevokedTime.
func (s *ApprovalCreate) SetRevokedTime(val OptDateTime) {
	s.RevokedTime = val
}

// SetRequestID sets the value of RequestID.
func (s *ApprovalCreate) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

func (*ApprovalCreate) createApprovalRes() {}

// Ref: #/components/schemas/ApprovalList
type ApprovalList struct {
	ID           uuid.UUID   `json:"id"`
	Person       string      `json:"person"`
	ApprovedTime time.Time   `json:"approved_time"`
	Approved     bool        `json:"approved"`
	Revoked      bool        `json:"revoked"`
	RevokedTime  OptDateTime `json:"revoked_time"`
	RequestID    uuid.UUID   `json:"request_id"`
}

// GetID returns the value of ID.
func (s *ApprovalList) GetID() uuid.UUID {
	return s.ID
}

// GetPerson returns the value of Person.
func (s *ApprovalList) GetPerson() string {
	return s.Person
}

// GetApprovedTime returns the value of ApprovedTime.
func (s *ApprovalList) GetApprovedTime() time.Time {
	return s.ApprovedTime
}

// GetApproved returns the value of Approved.
func (s *ApprovalList) GetApproved() bool {
	return s.Approved
}

// GetRevoked returns the value of Revoked.
func (s *ApprovalList) GetRevoked() bool {
	return s.Revoked
}

// GetRevokedTime returns the value of RevokedTime.
func (s *ApprovalList) GetRevokedTime() OptDateTime {
	return s.RevokedTime
}

// GetRequestID returns the value of RequestID.
func (s *ApprovalList) GetRequestID() uuid.UUID {
	return s.RequestID
}

// SetID sets the value of ID.
func (s *ApprovalList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetPerson sets the value of Person.
func (s *ApprovalList) SetPerson(val string) {
	s.Person = val
}

// SetApprovedTime sets the value of ApprovedTime.
func (s *ApprovalList) SetApprovedTime(val time.Time) {
	s.ApprovedTime = val
}

// SetApproved sets the value of Approved.
func (s *ApprovalList) SetApproved(val bool) {
	s.Approved = val
}

// SetRevoked sets the value of Revoked.
func (s *ApprovalList) SetRevoked(val bool) {
	s.Revoked = val
}

// SetRevokedTime sets the value of RevokedTime.
func (s *ApprovalList) SetRevokedTime(val OptDateTime) {
	s.RevokedTime = val
}

// SetRequestID sets the value of RequestID.
func (s *ApprovalList) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

// Ref: #/components/schemas/ApprovalRead
type ApprovalRead struct {
	ID           uuid.UUID   `json:"id"`
	Person       string      `json:"person"`
	ApprovedTime time.Time   `json:"approved_time"`
	Approved     bool        `json:"approved"`
	Revoked      bool        `json:"revoked"`
	RevokedTime  OptDateTime `json:"revoked_time"`
	RequestID    uuid.UUID   `json:"request_id"`
}

// GetID returns the value of ID.
func (s *ApprovalRead) GetID() uuid.UUID {
	return s.ID
}

// GetPerson returns the value of Person.
func (s *ApprovalRead) GetPerson() string {
	return s.Person
}

// GetApprovedTime returns the value of ApprovedTime.
func (s *ApprovalRead) GetApprovedTime() time.Time {
	return s.ApprovedTime
}

// GetApproved returns the value of Approved.
func (s *ApprovalRead) GetApproved() bool {
	return s.Approved
}

// GetRevoked returns the value of Revoked.
func (s *ApprovalRead) GetRevoked() bool {
	return s.Revoked
}

// GetRevokedTime returns the value of RevokedTime.
func (s *ApprovalRead) GetRevokedTime() OptDateTime {
	return s.RevokedTime
}

// GetRequestID returns the value of RequestID.
func (s *ApprovalRead) GetRequestID() uuid.UUID {
	return s.RequestID
}

// SetID sets the value of ID.
func (s *ApprovalRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetPerson sets the value of Person.
func (s *ApprovalRead) SetPerson(val string) {
	s.Person = val
}

// SetApprovedTime sets the value of ApprovedTime.
func (s *ApprovalRead) SetApprovedTime(val time.Time) {
	s.ApprovedTime = val
}

// SetApproved sets the value of Approved.
func (s *ApprovalRead) SetApproved(val bool) {
	s.Approved = val
}

// SetRevoked sets the value of Revoked.
func (s *ApprovalRead) SetRevoked(val bool) {
	s.Revoked = val
}

// SetRevokedTime sets the value of RevokedTime.
func (s *ApprovalRead) SetRevokedTime(val OptDateTime) {
	s.RevokedTime = val
}

// SetRequestID sets the value of RequestID.
func (s *ApprovalRead) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

func (*ApprovalRead) readApprovalRes() {}

// Ref: #/components/schemas/Approval_RequestsRead
type ApprovalRequestsRead struct {
	ID        uuid.UUID `json:"id"`
	Reason    string    `json:"reason"`
	Requester string    `json:"requester"`
	MissionID string    `json:"mission_id"`
}

// GetID returns the value of ID.
func (s *ApprovalRequestsRead) GetID() uuid.UUID {
	return s.ID
}

// GetReason returns the value of Reason.
func (s *ApprovalRequestsRead) GetReason() string {
	return s.Reason
}

// GetRequester returns the value of Requester.
func (s *ApprovalRequestsRead) GetRequester() string {
	return s.Requester
}

// GetMissionID returns the value of MissionID.
func (s *ApprovalRequestsRead) GetMissionID() string {
	return s.MissionID
}

// SetID sets the value of ID.
func (s *ApprovalRequestsRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetReason sets the value of Reason.
func (s *ApprovalRequestsRead) SetReason(val string) {
	s.Reason = val
}

// SetRequester sets the value of Requester.
func (s *ApprovalRequestsRead) SetRequester(val string) {
	s.Requester = val
}

// SetMissionID sets the value of MissionID.
func (s *ApprovalRequestsRead) SetMissionID(val string) {
	s.MissionID = val
}

func (*ApprovalRequestsRead) readApprovalRequestsRes() {}

// Ref: #/components/schemas/ApprovalUpdate
type ApprovalUpdate struct {
	ID           uuid.UUID   `json:"id"`
	Person       string      `json:"person"`
	ApprovedTime time.Time   `json:"approved_time"`
	Approved     bool        `json:"approved"`
	Revoked      bool        `json:"revoked"`
	RevokedTime  OptDateTime `json:"revoked_time"`
	RequestID    uuid.UUID   `json:"request_id"`
}

// GetID returns the value of ID.
func (s *ApprovalUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetPerson returns the value of Person.
func (s *ApprovalUpdate) GetPerson() string {
	return s.Person
}

// GetApprovedTime returns the value of ApprovedTime.
func (s *ApprovalUpdate) GetApprovedTime() time.Time {
	return s.ApprovedTime
}

// GetApproved returns the value of Approved.
func (s *ApprovalUpdate) GetApproved() bool {
	return s.Approved
}

// GetRevoked returns the value of Revoked.
func (s *ApprovalUpdate) GetRevoked() bool {
	return s.Revoked
}

// GetRevokedTime returns the value of RevokedTime.
func (s *ApprovalUpdate) GetRevokedTime() OptDateTime {
	return s.RevokedTime
}

// GetRequestID returns the value of RequestID.
func (s *ApprovalUpdate) GetRequestID() uuid.UUID {
	return s.RequestID
}

// SetID sets the value of ID.
func (s *ApprovalUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetPerson sets the value of Person.
func (s *ApprovalUpdate) SetPerson(val string) {
	s.Person = val
}

// SetApprovedTime sets the value of ApprovedTime.
func (s *ApprovalUpdate) SetApprovedTime(val time.Time) {
	s.ApprovedTime = val
}

// SetApproved sets the value of Approved.
func (s *ApprovalUpdate) SetApproved(val bool) {
	s.Approved = val
}

// SetRevoked sets the value of Revoked.
func (s *ApprovalUpdate) SetRevoked(val bool) {
	s.Revoked = val
}

// SetRevokedTime sets the value of RevokedTime.
func (s *ApprovalUpdate) SetRevokedTime(val OptDateTime) {
	s.RevokedTime = val
}

// SetRequestID sets the value of RequestID.
func (s *ApprovalUpdate) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

func (*ApprovalUpdate) updateApprovalRes() {}

// Ref: #/components/schemas/AuditCreate
type AuditCreate struct {
	ID        string    `json:"id"`
	Action    string    `json:"action"`
	Author    string    `json:"author"`
	Timestamp time.Time `json:"timestamp"`
}

// GetID returns the value of ID.
func (s *AuditCreate) GetID() string {
	return s.ID
}

// GetAction returns the value of Action.
func (s *AuditCreate) GetAction() string {
	return s.Action
}

// GetAuthor returns the value of Author.
func (s *AuditCreate) GetAuthor() string {
	return s.Author
}

// GetTimestamp returns the value of Timestamp.
func (s *AuditCreate) GetTimestamp() time.Time {
	return s.Timestamp
}

// SetID sets the value of ID.
func (s *AuditCreate) SetID(val string) {
	s.ID = val
}

// SetAction sets the value of Action.
func (s *AuditCreate) SetAction(val string) {
	s.Action = val
}

// SetAuthor sets the value of Author.
func (s *AuditCreate) SetAuthor(val string) {
	s.Author = val
}

// SetTimestamp sets the value of Timestamp.
func (s *AuditCreate) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

func (*AuditCreate) createAuditRes() {}

// Ref: #/components/schemas/AuditList
type AuditList struct {
	ID        string    `json:"id"`
	Action    string    `json:"action"`
	Author    string    `json:"author"`
	Timestamp time.Time `json:"timestamp"`
}

// GetID returns the value of ID.
func (s *AuditList) GetID() string {
	return s.ID
}

// GetAction returns the value of Action.
func (s *AuditList) GetAction() string {
	return s.Action
}

// GetAuthor returns the value of Author.
func (s *AuditList) GetAuthor() string {
	return s.Author
}

// GetTimestamp returns the value of Timestamp.
func (s *AuditList) GetTimestamp() time.Time {
	return s.Timestamp
}

// SetID sets the value of ID.
func (s *AuditList) SetID(val string) {
	s.ID = val
}

// SetAction sets the value of Action.
func (s *AuditList) SetAction(val string) {
	s.Action = val
}

// SetAuthor sets the value of Author.
func (s *AuditList) SetAuthor(val string) {
	s.Author = val
}

// SetTimestamp sets the value of Timestamp.
func (s *AuditList) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

// Ref: #/components/schemas/AuditRead
type AuditRead struct {
	ID        string    `json:"id"`
	Action    string    `json:"action"`
	Author    string    `json:"author"`
	Timestamp time.Time `json:"timestamp"`
}

// GetID returns the value of ID.
func (s *AuditRead) GetID() string {
	return s.ID
}

// GetAction returns the value of Action.
func (s *AuditRead) GetAction() string {
	return s.Action
}

// GetAuthor returns the value of Author.
func (s *AuditRead) GetAuthor() string {
	return s.Author
}

// GetTimestamp returns the value of Timestamp.
func (s *AuditRead) GetTimestamp() time.Time {
	return s.Timestamp
}

// SetID sets the value of ID.
func (s *AuditRead) SetID(val string) {
	s.ID = val
}

// SetAction sets the value of Action.
func (s *AuditRead) SetAction(val string) {
	s.Action = val
}

// SetAuthor sets the value of Author.
func (s *AuditRead) SetAuthor(val string) {
	s.Author = val
}

// SetTimestamp sets the value of Timestamp.
func (s *AuditRead) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

func (*AuditRead) readAuditRes() {}

// Ref: #/components/schemas/AuditUpdate
type AuditUpdate struct {
	ID        string    `json:"id"`
	Action    string    `json:"action"`
	Author    string    `json:"author"`
	Timestamp time.Time `json:"timestamp"`
}

// GetID returns the value of ID.
func (s *AuditUpdate) GetID() string {
	return s.ID
}

// GetAction returns the value of Action.
func (s *AuditUpdate) GetAction() string {
	return s.Action
}

// GetAuthor returns the value of Author.
func (s *AuditUpdate) GetAuthor() string {
	return s.Author
}

// GetTimestamp returns the value of Timestamp.
func (s *AuditUpdate) GetTimestamp() time.Time {
	return s.Timestamp
}

// SetID sets the value of ID.
func (s *AuditUpdate) SetID(val string) {
	s.ID = val
}

// SetAction sets the value of Action.
func (s *AuditUpdate) SetAction(val string) {
	s.Action = val
}

// SetAuthor sets the value of Author.
func (s *AuditUpdate) SetAuthor(val string) {
	s.Author = val
}

// SetTimestamp sets the value of Timestamp.
func (s *AuditUpdate) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

func (*AuditUpdate) updateAuditRes() {}

type CreateAccessReq struct {
	AccessTime   time.Time   `json:"access_time"`
	Approved     bool        `json:"approved"`
	RolledBack   bool        `json:"rolled_back"`
	RollbackTime OptDateTime `json:"rollback_time"`
	EndTime      time.Time   `json:"end_time"`
	RequestID    uuid.UUID   `json:"request_id"`
	Approvals    OptUUID     `json:"approvals"`
}

// GetAccessTime returns the value of AccessTime.
func (s *CreateAccessReq) GetAccessTime() time.Time {
	return s.AccessTime
}

// GetApproved returns the value of Approved.
func (s *CreateAccessReq) GetApproved() bool {
	return s.Approved
}

// GetRolledBack returns the value of RolledBack.
func (s *CreateAccessReq) GetRolledBack() bool {
	return s.RolledBack
}

// GetRollbackTime returns the value of RollbackTime.
func (s *CreateAccessReq) GetRollbackTime() OptDateTime {
	return s.RollbackTime
}

// GetEndTime returns the value of EndTime.
func (s *CreateAccessReq) GetEndTime() time.Time {
	return s.EndTime
}

// GetRequestID returns the value of RequestID.
func (s *CreateAccessReq) GetRequestID() uuid.UUID {
	return s.RequestID
}

// GetApprovals returns the value of Approvals.
func (s *CreateAccessReq) GetApprovals() OptUUID {
	return s.Approvals
}

// SetAccessTime sets the value of AccessTime.
func (s *CreateAccessReq) SetAccessTime(val time.Time) {
	s.AccessTime = val
}

// SetApproved sets the value of Approved.
func (s *CreateAccessReq) SetApproved(val bool) {
	s.Approved = val
}

// SetRolledBack sets the value of RolledBack.
func (s *CreateAccessReq) SetRolledBack(val bool) {
	s.RolledBack = val
}

// SetRollbackTime sets the value of RollbackTime.
func (s *CreateAccessReq) SetRollbackTime(val OptDateTime) {
	s.RollbackTime = val
}

// SetEndTime sets the value of EndTime.
func (s *CreateAccessReq) SetEndTime(val time.Time) {
	s.EndTime = val
}

// SetRequestID sets the value of RequestID.
func (s *CreateAccessReq) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

// SetApprovals sets the value of Approvals.
func (s *CreateAccessReq) SetApprovals(val OptUUID) {
	s.Approvals = val
}

type CreateApprovalReq struct {
	Person       string      `json:"person"`
	ApprovedTime time.Time   `json:"approved_time"`
	Approved     bool        `json:"approved"`
	Revoked      bool        `json:"revoked"`
	RevokedTime  OptDateTime `json:"revoked_time"`
	RequestID    uuid.UUID   `json:"request_id"`
	Requests     uuid.UUID   `json:"requests"`
}

// GetPerson returns the value of Person.
func (s *CreateApprovalReq) GetPerson() string {
	return s.Person
}

// GetApprovedTime returns the value of ApprovedTime.
func (s *CreateApprovalReq) GetApprovedTime() time.Time {
	return s.ApprovedTime
}

// GetApproved returns the value of Approved.
func (s *CreateApprovalReq) GetApproved() bool {
	return s.Approved
}

// GetRevoked returns the value of Revoked.
func (s *CreateApprovalReq) GetRevoked() bool {
	return s.Revoked
}

// GetRevokedTime returns the value of RevokedTime.
func (s *CreateApprovalReq) GetRevokedTime() OptDateTime {
	return s.RevokedTime
}

// GetRequestID returns the value of RequestID.
func (s *CreateApprovalReq) GetRequestID() uuid.UUID {
	return s.RequestID
}

// GetRequests returns the value of Requests.
func (s *CreateApprovalReq) GetRequests() uuid.UUID {
	return s.Requests
}

// SetPerson sets the value of Person.
func (s *CreateApprovalReq) SetPerson(val string) {
	s.Person = val
}

// SetApprovedTime sets the value of ApprovedTime.
func (s *CreateApprovalReq) SetApprovedTime(val time.Time) {
	s.ApprovedTime = val
}

// SetApproved sets the value of Approved.
func (s *CreateApprovalReq) SetApproved(val bool) {
	s.Approved = val
}

// SetRevoked sets the value of Revoked.
func (s *CreateApprovalReq) SetRevoked(val bool) {
	s.Revoked = val
}

// SetRevokedTime sets the value of RevokedTime.
func (s *CreateApprovalReq) SetRevokedTime(val OptDateTime) {
	s.RevokedTime = val
}

// SetRequestID sets the value of RequestID.
func (s *CreateApprovalReq) SetRequestID(val uuid.UUID) {
	s.RequestID = val
}

// SetRequests sets the value of Requests.
func (s *CreateApprovalReq) SetRequests(val uuid.UUID) {
	s.Requests = val
}

type CreateAuditReq struct {
	Action    string    `json:"action"`
	Author    string    `json:"author"`
	Timestamp time.Time `json:"timestamp"`
}

// GetAction returns the value of Action.
func (s *CreateAuditReq) GetAction() string {
	return s.Action
}

// GetAuthor returns the value of Author.
func (s *CreateAuditReq) GetAuthor() string {
	return s.Author
}

// GetTimestamp returns the value of Timestamp.
func (s *CreateAuditReq) GetTimestamp() time.Time {
	return s.Timestamp
}

// SetAction sets the value of Action.
func (s *CreateAuditReq) SetAction(val string) {
	s.Action = val
}

// SetAuthor sets the value of Author.
func (s *CreateAuditReq) SetAuthor(val string) {
	s.Author = val
}

// SetTimestamp sets the value of Timestamp.
func (s *CreateAuditReq) SetTimestamp(val time.Time) {
	s.Timestamp = val
}

type CreateMissionReq struct {
	Description  OptString   `json:"description"`
	Image        string      `json:"image"`
	MinApprovers int         `json:"min_approvers"`
	RocketID     string      `json:"rocket_id"`
	Rocket       string      `json:"rocket"`
	Requests     []uuid.UUID `json:"requests"`
}

// GetDescription returns the value of Description.
func (s *CreateMissionReq) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *CreateMissionReq) GetImage() string {
	return s.Image
}

// GetMinApprovers returns the value of MinApprovers.
func (s *CreateMissionReq) GetMinApprovers() int {
	return s.MinApprovers
}

// GetRocketID returns the value of RocketID.
func (s *CreateMissionReq) GetRocketID() string {
	return s.RocketID
}

// GetRocket returns the value of Rocket.
func (s *CreateMissionReq) GetRocket() string {
	return s.Rocket
}

// GetRequests returns the value of Requests.
func (s *CreateMissionReq) GetRequests() []uuid.UUID {
	return s.Requests
}

// SetDescription sets the value of Description.
func (s *CreateMissionReq) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *CreateMissionReq) SetImage(val string) {
	s.Image = val
}

// SetMinApprovers sets the value of MinApprovers.
func (s *CreateMissionReq) SetMinApprovers(val int) {
	s.MinApprovers = val
}

// SetRocketID sets the value of RocketID.
func (s *CreateMissionReq) SetRocketID(val string) {
	s.RocketID = val
}

// SetRocket sets the value of Rocket.
func (s *CreateMissionReq) SetRocket(val string) {
	s.Rocket = val
}

// SetRequests sets the value of Requests.
func (s *CreateMissionReq) SetRequests(val []uuid.UUID) {
	s.Requests = val
}

type CreateRequestReq struct {
	Reason    string `json:"reason"`
	Requester string `json:"requester"`
	MissionID string `json:"mission_id"`
	Mission   string `json:"mission"`
}

// GetReason returns the value of Reason.
func (s *CreateRequestReq) GetReason() string {
	return s.Reason
}

// GetRequester returns the value of Requester.
func (s *CreateRequestReq) GetRequester() string {
	return s.Requester
}

// GetMissionID returns the value of MissionID.
func (s *CreateRequestReq) GetMissionID() string {
	return s.MissionID
}

// GetMission returns the value of Mission.
func (s *CreateRequestReq) GetMission() string {
	return s.Mission
}

// SetReason sets the value of Reason.
func (s *CreateRequestReq) SetReason(val string) {
	s.Reason = val
}

// SetRequester sets the value of Requester.
func (s *CreateRequestReq) SetRequester(val string) {
	s.Requester = val
}

// SetMissionID sets the value of MissionID.
func (s *CreateRequestReq) SetMissionID(val string) {
	s.MissionID = val
}

// SetMission sets the value of Mission.
func (s *CreateRequestReq) SetMission(val string) {
	s.Mission = val
}

type CreateRocketReq struct {
	Description OptString             `json:"description"`
	Image       string                `json:"image"`
	Config      CreateRocketReqConfig `json:"config"`
	Missions    []string              `json:"missions"`
}

// GetDescription returns the value of Description.
func (s *CreateRocketReq) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *CreateRocketReq) GetImage() string {
	return s.Image
}

// GetConfig returns the value of Config.
func (s *CreateRocketReq) GetConfig() CreateRocketReqConfig {
	return s.Config
}

// GetMissions returns the value of Missions.
func (s *CreateRocketReq) GetMissions() []string {
	return s.Missions
}

// SetDescription sets the value of Description.
func (s *CreateRocketReq) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *CreateRocketReq) SetImage(val string) {
	s.Image = val
}

// SetConfig sets the value of Config.
func (s *CreateRocketReq) SetConfig(val CreateRocketReqConfig) {
	s.Config = val
}

// SetMissions sets the value of Missions.
func (s *CreateRocketReq) SetMissions(val []string) {
	s.Missions = val
}

type CreateRocketReqConfig map[string]string

func (s *CreateRocketReqConfig) init() CreateRocketReqConfig {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// DeleteAccessNoContent is response for DeleteAccess operation.
type DeleteAccessNoContent struct{}

func (*DeleteAccessNoContent) deleteAccessRes() {}

// DeleteApprovalNoContent is response for DeleteApproval operation.
type DeleteApprovalNoContent struct{}

func (*DeleteApprovalNoContent) deleteApprovalRes() {}

// DeleteAuditNoContent is response for DeleteAudit operation.
type DeleteAuditNoContent struct{}

func (*DeleteAuditNoContent) deleteAuditRes() {}

// DeleteMissionNoContent is response for DeleteMission operation.
type DeleteMissionNoContent struct{}

func (*DeleteMissionNoContent) deleteMissionRes() {}

// DeleteRequestNoContent is response for DeleteRequest operation.
type DeleteRequestNoContent struct{}

func (*DeleteRequestNoContent) deleteRequestRes() {}

// DeleteRocketNoContent is response for DeleteRocket operation.
type DeleteRocketNoContent struct{}

func (*DeleteRocketNoContent) deleteRocketRes() {}

type ListAccessOKApplicationJSON []AccessList

func (*ListAccessOKApplicationJSON) listAccessRes() {}

type ListApprovalOKApplicationJSON []ApprovalList

func (*ListApprovalOKApplicationJSON) listApprovalRes() {}

type ListAuditOKApplicationJSON []AuditList

func (*ListAuditOKApplicationJSON) listAuditRes() {}

type ListMissionOKApplicationJSON []MissionList

func (*ListMissionOKApplicationJSON) listMissionRes() {}

type ListMissionRequestsOKApplicationJSON []MissionRequestsList

func (*ListMissionRequestsOKApplicationJSON) listMissionRequestsRes() {}

type ListRequestOKApplicationJSON []RequestList

func (*ListRequestOKApplicationJSON) listRequestRes() {}

type ListRocketMissionsOKApplicationJSON []RocketMissionsList

func (*ListRocketMissionsOKApplicationJSON) listRocketMissionsRes() {}

type ListRocketOKApplicationJSON []RocketList

func (*ListRocketOKApplicationJSON) listRocketRes() {}

// Ref: #/components/schemas/MissionCreate
type MissionCreate struct {
	ID           string    `json:"id"`
	Description  OptString `json:"description"`
	Image        string    `json:"image"`
	MinApprovers int       `json:"min_approvers"`
	RocketID     string    `json:"rocket_id"`
}

// GetID returns the value of ID.
func (s *MissionCreate) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *MissionCreate) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *MissionCreate) GetImage() string {
	return s.Image
}

// GetMinApprovers returns the value of MinApprovers.
func (s *MissionCreate) GetMinApprovers() int {
	return s.MinApprovers
}

// GetRocketID returns the value of RocketID.
func (s *MissionCreate) GetRocketID() string {
	return s.RocketID
}

// SetID sets the value of ID.
func (s *MissionCreate) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *MissionCreate) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *MissionCreate) SetImage(val string) {
	s.Image = val
}

// SetMinApprovers sets the value of MinApprovers.
func (s *MissionCreate) SetMinApprovers(val int) {
	s.MinApprovers = val
}

// SetRocketID sets the value of RocketID.
func (s *MissionCreate) SetRocketID(val string) {
	s.RocketID = val
}

func (*MissionCreate) createMissionRes() {}

// Ref: #/components/schemas/MissionList
type MissionList struct {
	ID           string    `json:"id"`
	Description  OptString `json:"description"`
	Image        string    `json:"image"`
	MinApprovers int       `json:"min_approvers"`
	RocketID     string    `json:"rocket_id"`
}

// GetID returns the value of ID.
func (s *MissionList) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *MissionList) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *MissionList) GetImage() string {
	return s.Image
}

// GetMinApprovers returns the value of MinApprovers.
func (s *MissionList) GetMinApprovers() int {
	return s.MinApprovers
}

// GetRocketID returns the value of RocketID.
func (s *MissionList) GetRocketID() string {
	return s.RocketID
}

// SetID sets the value of ID.
func (s *MissionList) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *MissionList) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *MissionList) SetImage(val string) {
	s.Image = val
}

// SetMinApprovers sets the value of MinApprovers.
func (s *MissionList) SetMinApprovers(val int) {
	s.MinApprovers = val
}

// SetRocketID sets the value of RocketID.
func (s *MissionList) SetRocketID(val string) {
	s.RocketID = val
}

// Ref: #/components/schemas/MissionRead
type MissionRead struct {
	ID           string    `json:"id"`
	Description  OptString `json:"description"`
	Image        string    `json:"image"`
	MinApprovers int       `json:"min_approvers"`
	RocketID     string    `json:"rocket_id"`
}

// GetID returns the value of ID.
func (s *MissionRead) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *MissionRead) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *MissionRead) GetImage() string {
	return s.Image
}

// GetMinApprovers returns the value of MinApprovers.
func (s *MissionRead) GetMinApprovers() int {
	return s.MinApprovers
}

// GetRocketID returns the value of RocketID.
func (s *MissionRead) GetRocketID() string {
	return s.RocketID
}

// SetID sets the value of ID.
func (s *MissionRead) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *MissionRead) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *MissionRead) SetImage(val string) {
	s.Image = val
}

// SetMinApprovers sets the value of MinApprovers.
func (s *MissionRead) SetMinApprovers(val int) {
	s.MinApprovers = val
}

// SetRocketID sets the value of RocketID.
func (s *MissionRead) SetRocketID(val string) {
	s.RocketID = val
}

func (*MissionRead) readMissionRes() {}

// Ref: #/components/schemas/Mission_RequestsList
type MissionRequestsList struct {
	ID        uuid.UUID `json:"id"`
	Reason    string    `json:"reason"`
	Requester string    `json:"requester"`
	MissionID string    `json:"mission_id"`
}

// GetID returns the value of ID.
func (s *MissionRequestsList) GetID() uuid.UUID {
	return s.ID
}

// GetReason returns the value of Reason.
func (s *MissionRequestsList) GetReason() string {
	return s.Reason
}

// GetRequester returns the value of Requester.
func (s *MissionRequestsList) GetRequester() string {
	return s.Requester
}

// GetMissionID returns the value of MissionID.
func (s *MissionRequestsList) GetMissionID() string {
	return s.MissionID
}

// SetID sets the value of ID.
func (s *MissionRequestsList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetReason sets the value of Reason.
func (s *MissionRequestsList) SetReason(val string) {
	s.Reason = val
}

// SetRequester sets the value of Requester.
func (s *MissionRequestsList) SetRequester(val string) {
	s.Requester = val
}

// SetMissionID sets the value of MissionID.
func (s *MissionRequestsList) SetMissionID(val string) {
	s.MissionID = val
}

// Ref: #/components/schemas/Mission_RocketRead
type MissionRocketRead struct {
	ID          string                  `json:"id"`
	Description OptString               `json:"description"`
	Image       string                  `json:"image"`
	Config      MissionRocketReadConfig `json:"config"`
}

// GetID returns the value of ID.
func (s *MissionRocketRead) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *MissionRocketRead) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *MissionRocketRead) GetImage() string {
	return s.Image
}

// GetConfig returns the value of Config.
func (s *MissionRocketRead) GetConfig() MissionRocketReadConfig {
	return s.Config
}

// SetID sets the value of ID.
func (s *MissionRocketRead) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *MissionRocketRead) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *MissionRocketRead) SetImage(val string) {
	s.Image = val
}

// SetConfig sets the value of Config.
func (s *MissionRocketRead) SetConfig(val MissionRocketReadConfig) {
	s.Config = val
}

func (*MissionRocketRead) readMissionRocketRes() {}

type MissionRocketReadConfig map[string]string

func (s *MissionRocketReadConfig) init() MissionRocketReadConfig {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/MissionUpdate
type MissionUpdate struct {
	ID           string    `json:"id"`
	Description  OptString `json:"description"`
	Image        string    `json:"image"`
	MinApprovers int       `json:"min_approvers"`
	RocketID     string    `json:"rocket_id"`
}

// GetID returns the value of ID.
func (s *MissionUpdate) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *MissionUpdate) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *MissionUpdate) GetImage() string {
	return s.Image
}

// GetMinApprovers returns the value of MinApprovers.
func (s *MissionUpdate) GetMinApprovers() int {
	return s.MinApprovers
}

// GetRocketID returns the value of RocketID.
func (s *MissionUpdate) GetRocketID() string {
	return s.RocketID
}

// SetID sets the value of ID.
func (s *MissionUpdate) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *MissionUpdate) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *MissionUpdate) SetImage(val string) {
	s.Image = val
}

// SetMinApprovers sets the value of MinApprovers.
func (s *MissionUpdate) SetMinApprovers(val int) {
	s.MinApprovers = val
}

// SetRocketID sets the value of RocketID.
func (s *MissionUpdate) SetRocketID(val string) {
	s.RocketID = val
}

func (*MissionUpdate) updateMissionRes() {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUUID returns new OptUUID with value set to v.
func NewOptUUID(v uuid.UUID) OptUUID {
	return OptUUID{
		Value: v,
		Set:   true,
	}
}

// OptUUID is optional uuid.UUID.
type OptUUID struct {
	Value uuid.UUID
	Set   bool
}

// IsSet returns true if OptUUID was set.
func (o OptUUID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUUID) Reset() {
	var v uuid.UUID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUUID) SetTo(v uuid.UUID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUUID) Get() (v uuid.UUID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptUpdateRocketReqConfig returns new OptUpdateRocketReqConfig with value set to v.
func NewOptUpdateRocketReqConfig(v UpdateRocketReqConfig) OptUpdateRocketReqConfig {
	return OptUpdateRocketReqConfig{
		Value: v,
		Set:   true,
	}
}

// OptUpdateRocketReqConfig is optional UpdateRocketReqConfig.
type OptUpdateRocketReqConfig struct {
	Value UpdateRocketReqConfig
	Set   bool
}

// IsSet returns true if OptUpdateRocketReqConfig was set.
func (o OptUpdateRocketReqConfig) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptUpdateRocketReqConfig) Reset() {
	var v UpdateRocketReqConfig
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptUpdateRocketReqConfig) SetTo(v UpdateRocketReqConfig) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptUpdateRocketReqConfig) Get() (v UpdateRocketReqConfig, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptUpdateRocketReqConfig) Or(d UpdateRocketReqConfig) UpdateRocketReqConfig {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type R400 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R400) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R400) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R400) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R400) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R400) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R400) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R400) createAccessRes()         {}
func (*R400) createApprovalRes()       {}
func (*R400) createAuditRes()          {}
func (*R400) createMissionRes()        {}
func (*R400) createRequestRes()        {}
func (*R400) createRocketRes()         {}
func (*R400) deleteAccessRes()         {}
func (*R400) deleteApprovalRes()       {}
func (*R400) deleteAuditRes()          {}
func (*R400) deleteMissionRes()        {}
func (*R400) deleteRequestRes()        {}
func (*R400) deleteRocketRes()         {}
func (*R400) listAccessRes()           {}
func (*R400) listApprovalRes()         {}
func (*R400) listAuditRes()            {}
func (*R400) listMissionRequestsRes()  {}
func (*R400) listMissionRes()          {}
func (*R400) listRequestRes()          {}
func (*R400) listRocketMissionsRes()   {}
func (*R400) listRocketRes()           {}
func (*R400) readAccessApprovalsRes()  {}
func (*R400) readAccessRes()           {}
func (*R400) readApprovalRequestsRes() {}
func (*R400) readApprovalRes()         {}
func (*R400) readAuditRes()            {}
func (*R400) readMissionRes()          {}
func (*R400) readMissionRocketRes()    {}
func (*R400) readRequestMissionRes()   {}
func (*R400) readRequestRes()          {}
func (*R400) readRocketRes()           {}
func (*R400) updateAccessRes()         {}
func (*R400) updateApprovalRes()       {}
func (*R400) updateAuditRes()          {}
func (*R400) updateMissionRes()        {}
func (*R400) updateRequestRes()        {}
func (*R400) updateRocketRes()         {}

type R404 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R404) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R404) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R404) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R404) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R404) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R404) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R404) deleteAccessRes()         {}
func (*R404) deleteApprovalRes()       {}
func (*R404) deleteAuditRes()          {}
func (*R404) deleteMissionRes()        {}
func (*R404) deleteRequestRes()        {}
func (*R404) deleteRocketRes()         {}
func (*R404) listAccessRes()           {}
func (*R404) listApprovalRes()         {}
func (*R404) listAuditRes()            {}
func (*R404) listMissionRequestsRes()  {}
func (*R404) listMissionRes()          {}
func (*R404) listRequestRes()          {}
func (*R404) listRocketMissionsRes()   {}
func (*R404) listRocketRes()           {}
func (*R404) readAccessApprovalsRes()  {}
func (*R404) readAccessRes()           {}
func (*R404) readApprovalRequestsRes() {}
func (*R404) readApprovalRes()         {}
func (*R404) readAuditRes()            {}
func (*R404) readMissionRes()          {}
func (*R404) readMissionRocketRes()    {}
func (*R404) readRequestMissionRes()   {}
func (*R404) readRequestRes()          {}
func (*R404) readRocketRes()           {}
func (*R404) updateAccessRes()         {}
func (*R404) updateApprovalRes()       {}
func (*R404) updateAuditRes()          {}
func (*R404) updateMissionRes()        {}
func (*R404) updateRequestRes()        {}
func (*R404) updateRocketRes()         {}

type R409 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R409) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R409) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R409) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R409) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R409) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R409) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R409) createAccessRes()         {}
func (*R409) createApprovalRes()       {}
func (*R409) createAuditRes()          {}
func (*R409) createMissionRes()        {}
func (*R409) createRequestRes()        {}
func (*R409) createRocketRes()         {}
func (*R409) deleteAccessRes()         {}
func (*R409) deleteApprovalRes()       {}
func (*R409) deleteAuditRes()          {}
func (*R409) deleteMissionRes()        {}
func (*R409) deleteRequestRes()        {}
func (*R409) deleteRocketRes()         {}
func (*R409) listAccessRes()           {}
func (*R409) listApprovalRes()         {}
func (*R409) listAuditRes()            {}
func (*R409) listMissionRequestsRes()  {}
func (*R409) listMissionRes()          {}
func (*R409) listRequestRes()          {}
func (*R409) listRocketMissionsRes()   {}
func (*R409) listRocketRes()           {}
func (*R409) readAccessApprovalsRes()  {}
func (*R409) readAccessRes()           {}
func (*R409) readApprovalRequestsRes() {}
func (*R409) readApprovalRes()         {}
func (*R409) readAuditRes()            {}
func (*R409) readMissionRes()          {}
func (*R409) readMissionRocketRes()    {}
func (*R409) readRequestMissionRes()   {}
func (*R409) readRequestRes()          {}
func (*R409) readRocketRes()           {}
func (*R409) updateAccessRes()         {}
func (*R409) updateApprovalRes()       {}
func (*R409) updateAuditRes()          {}
func (*R409) updateMissionRes()        {}
func (*R409) updateRequestRes()        {}
func (*R409) updateRocketRes()         {}

type R500 struct {
	Code   int    `json:"code"`
	Status string `json:"status"`
	Errors jx.Raw `json:"errors"`
}

// GetCode returns the value of Code.
func (s *R500) GetCode() int {
	return s.Code
}

// GetStatus returns the value of Status.
func (s *R500) GetStatus() string {
	return s.Status
}

// GetErrors returns the value of Errors.
func (s *R500) GetErrors() jx.Raw {
	return s.Errors
}

// SetCode sets the value of Code.
func (s *R500) SetCode(val int) {
	s.Code = val
}

// SetStatus sets the value of Status.
func (s *R500) SetStatus(val string) {
	s.Status = val
}

// SetErrors sets the value of Errors.
func (s *R500) SetErrors(val jx.Raw) {
	s.Errors = val
}

func (*R500) createAccessRes()         {}
func (*R500) createApprovalRes()       {}
func (*R500) createAuditRes()          {}
func (*R500) createMissionRes()        {}
func (*R500) createRequestRes()        {}
func (*R500) createRocketRes()         {}
func (*R500) deleteAccessRes()         {}
func (*R500) deleteApprovalRes()       {}
func (*R500) deleteAuditRes()          {}
func (*R500) deleteMissionRes()        {}
func (*R500) deleteRequestRes()        {}
func (*R500) deleteRocketRes()         {}
func (*R500) listAccessRes()           {}
func (*R500) listApprovalRes()         {}
func (*R500) listAuditRes()            {}
func (*R500) listMissionRequestsRes()  {}
func (*R500) listMissionRes()          {}
func (*R500) listRequestRes()          {}
func (*R500) listRocketMissionsRes()   {}
func (*R500) listRocketRes()           {}
func (*R500) readAccessApprovalsRes()  {}
func (*R500) readAccessRes()           {}
func (*R500) readApprovalRequestsRes() {}
func (*R500) readApprovalRes()         {}
func (*R500) readAuditRes()            {}
func (*R500) readMissionRes()          {}
func (*R500) readMissionRocketRes()    {}
func (*R500) readRequestMissionRes()   {}
func (*R500) readRequestRes()          {}
func (*R500) readRocketRes()           {}
func (*R500) updateAccessRes()         {}
func (*R500) updateApprovalRes()       {}
func (*R500) updateAuditRes()          {}
func (*R500) updateMissionRes()        {}
func (*R500) updateRequestRes()        {}
func (*R500) updateRocketRes()         {}

// Ref: #/components/schemas/RequestCreate
type RequestCreate struct {
	ID        uuid.UUID `json:"id"`
	Reason    string    `json:"reason"`
	Requester string    `json:"requester"`
	MissionID string    `json:"mission_id"`
}

// GetID returns the value of ID.
func (s *RequestCreate) GetID() uuid.UUID {
	return s.ID
}

// GetReason returns the value of Reason.
func (s *RequestCreate) GetReason() string {
	return s.Reason
}

// GetRequester returns the value of Requester.
func (s *RequestCreate) GetRequester() string {
	return s.Requester
}

// GetMissionID returns the value of MissionID.
func (s *RequestCreate) GetMissionID() string {
	return s.MissionID
}

// SetID sets the value of ID.
func (s *RequestCreate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetReason sets the value of Reason.
func (s *RequestCreate) SetReason(val string) {
	s.Reason = val
}

// SetRequester sets the value of Requester.
func (s *RequestCreate) SetRequester(val string) {
	s.Requester = val
}

// SetMissionID sets the value of MissionID.
func (s *RequestCreate) SetMissionID(val string) {
	s.MissionID = val
}

func (*RequestCreate) createRequestRes() {}

// Ref: #/components/schemas/RequestList
type RequestList struct {
	ID        uuid.UUID `json:"id"`
	Reason    string    `json:"reason"`
	Requester string    `json:"requester"`
	MissionID string    `json:"mission_id"`
}

// GetID returns the value of ID.
func (s *RequestList) GetID() uuid.UUID {
	return s.ID
}

// GetReason returns the value of Reason.
func (s *RequestList) GetReason() string {
	return s.Reason
}

// GetRequester returns the value of Requester.
func (s *RequestList) GetRequester() string {
	return s.Requester
}

// GetMissionID returns the value of MissionID.
func (s *RequestList) GetMissionID() string {
	return s.MissionID
}

// SetID sets the value of ID.
func (s *RequestList) SetID(val uuid.UUID) {
	s.ID = val
}

// SetReason sets the value of Reason.
func (s *RequestList) SetReason(val string) {
	s.Reason = val
}

// SetRequester sets the value of Requester.
func (s *RequestList) SetRequester(val string) {
	s.Requester = val
}

// SetMissionID sets the value of MissionID.
func (s *RequestList) SetMissionID(val string) {
	s.MissionID = val
}

// Ref: #/components/schemas/Request_MissionRead
type RequestMissionRead struct {
	ID           string    `json:"id"`
	Description  OptString `json:"description"`
	Image        string    `json:"image"`
	MinApprovers int       `json:"min_approvers"`
	RocketID     string    `json:"rocket_id"`
}

// GetID returns the value of ID.
func (s *RequestMissionRead) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *RequestMissionRead) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *RequestMissionRead) GetImage() string {
	return s.Image
}

// GetMinApprovers returns the value of MinApprovers.
func (s *RequestMissionRead) GetMinApprovers() int {
	return s.MinApprovers
}

// GetRocketID returns the value of RocketID.
func (s *RequestMissionRead) GetRocketID() string {
	return s.RocketID
}

// SetID sets the value of ID.
func (s *RequestMissionRead) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *RequestMissionRead) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *RequestMissionRead) SetImage(val string) {
	s.Image = val
}

// SetMinApprovers sets the value of MinApprovers.
func (s *RequestMissionRead) SetMinApprovers(val int) {
	s.MinApprovers = val
}

// SetRocketID sets the value of RocketID.
func (s *RequestMissionRead) SetRocketID(val string) {
	s.RocketID = val
}

func (*RequestMissionRead) readRequestMissionRes() {}

// Ref: #/components/schemas/RequestRead
type RequestRead struct {
	ID        uuid.UUID `json:"id"`
	Reason    string    `json:"reason"`
	Requester string    `json:"requester"`
	MissionID string    `json:"mission_id"`
}

// GetID returns the value of ID.
func (s *RequestRead) GetID() uuid.UUID {
	return s.ID
}

// GetReason returns the value of Reason.
func (s *RequestRead) GetReason() string {
	return s.Reason
}

// GetRequester returns the value of Requester.
func (s *RequestRead) GetRequester() string {
	return s.Requester
}

// GetMissionID returns the value of MissionID.
func (s *RequestRead) GetMissionID() string {
	return s.MissionID
}

// SetID sets the value of ID.
func (s *RequestRead) SetID(val uuid.UUID) {
	s.ID = val
}

// SetReason sets the value of Reason.
func (s *RequestRead) SetReason(val string) {
	s.Reason = val
}

// SetRequester sets the value of Requester.
func (s *RequestRead) SetRequester(val string) {
	s.Requester = val
}

// SetMissionID sets the value of MissionID.
func (s *RequestRead) SetMissionID(val string) {
	s.MissionID = val
}

func (*RequestRead) readRequestRes() {}

// Ref: #/components/schemas/RequestUpdate
type RequestUpdate struct {
	ID        uuid.UUID `json:"id"`
	Reason    string    `json:"reason"`
	Requester string    `json:"requester"`
	MissionID string    `json:"mission_id"`
}

// GetID returns the value of ID.
func (s *RequestUpdate) GetID() uuid.UUID {
	return s.ID
}

// GetReason returns the value of Reason.
func (s *RequestUpdate) GetReason() string {
	return s.Reason
}

// GetRequester returns the value of Requester.
func (s *RequestUpdate) GetRequester() string {
	return s.Requester
}

// GetMissionID returns the value of MissionID.
func (s *RequestUpdate) GetMissionID() string {
	return s.MissionID
}

// SetID sets the value of ID.
func (s *RequestUpdate) SetID(val uuid.UUID) {
	s.ID = val
}

// SetReason sets the value of Reason.
func (s *RequestUpdate) SetReason(val string) {
	s.Reason = val
}

// SetRequester sets the value of Requester.
func (s *RequestUpdate) SetRequester(val string) {
	s.Requester = val
}

// SetMissionID sets the value of MissionID.
func (s *RequestUpdate) SetMissionID(val string) {
	s.MissionID = val
}

func (*RequestUpdate) updateRequestRes() {}

// Ref: #/components/schemas/RocketCreate
type RocketCreate struct {
	ID          string             `json:"id"`
	Description OptString          `json:"description"`
	Image       string             `json:"image"`
	Config      RocketCreateConfig `json:"config"`
}

// GetID returns the value of ID.
func (s *RocketCreate) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *RocketCreate) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *RocketCreate) GetImage() string {
	return s.Image
}

// GetConfig returns the value of Config.
func (s *RocketCreate) GetConfig() RocketCreateConfig {
	return s.Config
}

// SetID sets the value of ID.
func (s *RocketCreate) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *RocketCreate) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *RocketCreate) SetImage(val string) {
	s.Image = val
}

// SetConfig sets the value of Config.
func (s *RocketCreate) SetConfig(val RocketCreateConfig) {
	s.Config = val
}

func (*RocketCreate) createRocketRes() {}

type RocketCreateConfig map[string]string

func (s *RocketCreateConfig) init() RocketCreateConfig {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/RocketList
type RocketList struct {
	ID          string           `json:"id"`
	Description OptString        `json:"description"`
	Image       string           `json:"image"`
	Config      RocketListConfig `json:"config"`
}

// GetID returns the value of ID.
func (s *RocketList) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *RocketList) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *RocketList) GetImage() string {
	return s.Image
}

// GetConfig returns the value of Config.
func (s *RocketList) GetConfig() RocketListConfig {
	return s.Config
}

// SetID sets the value of ID.
func (s *RocketList) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *RocketList) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *RocketList) SetImage(val string) {
	s.Image = val
}

// SetConfig sets the value of Config.
func (s *RocketList) SetConfig(val RocketListConfig) {
	s.Config = val
}

type RocketListConfig map[string]string

func (s *RocketListConfig) init() RocketListConfig {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/Rocket_MissionsList
type RocketMissionsList struct {
	ID           string    `json:"id"`
	Description  OptString `json:"description"`
	Image        string    `json:"image"`
	MinApprovers int       `json:"min_approvers"`
	RocketID     string    `json:"rocket_id"`
}

// GetID returns the value of ID.
func (s *RocketMissionsList) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *RocketMissionsList) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *RocketMissionsList) GetImage() string {
	return s.Image
}

// GetMinApprovers returns the value of MinApprovers.
func (s *RocketMissionsList) GetMinApprovers() int {
	return s.MinApprovers
}

// GetRocketID returns the value of RocketID.
func (s *RocketMissionsList) GetRocketID() string {
	return s.RocketID
}

// SetID sets the value of ID.
func (s *RocketMissionsList) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *RocketMissionsList) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *RocketMissionsList) SetImage(val string) {
	s.Image = val
}

// SetMinApprovers sets the value of MinApprovers.
func (s *RocketMissionsList) SetMinApprovers(val int) {
	s.MinApprovers = val
}

// SetRocketID sets the value of RocketID.
func (s *RocketMissionsList) SetRocketID(val string) {
	s.RocketID = val
}

// Ref: #/components/schemas/RocketRead
type RocketRead struct {
	ID          string           `json:"id"`
	Description OptString        `json:"description"`
	Image       string           `json:"image"`
	Config      RocketReadConfig `json:"config"`
}

// GetID returns the value of ID.
func (s *RocketRead) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *RocketRead) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *RocketRead) GetImage() string {
	return s.Image
}

// GetConfig returns the value of Config.
func (s *RocketRead) GetConfig() RocketReadConfig {
	return s.Config
}

// SetID sets the value of ID.
func (s *RocketRead) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *RocketRead) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *RocketRead) SetImage(val string) {
	s.Image = val
}

// SetConfig sets the value of Config.
func (s *RocketRead) SetConfig(val RocketReadConfig) {
	s.Config = val
}

func (*RocketRead) readRocketRes() {}

type RocketReadConfig map[string]string

func (s *RocketReadConfig) init() RocketReadConfig {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/RocketUpdate
type RocketUpdate struct {
	ID          string             `json:"id"`
	Description OptString          `json:"description"`
	Image       string             `json:"image"`
	Config      RocketUpdateConfig `json:"config"`
}

// GetID returns the value of ID.
func (s *RocketUpdate) GetID() string {
	return s.ID
}

// GetDescription returns the value of Description.
func (s *RocketUpdate) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *RocketUpdate) GetImage() string {
	return s.Image
}

// GetConfig returns the value of Config.
func (s *RocketUpdate) GetConfig() RocketUpdateConfig {
	return s.Config
}

// SetID sets the value of ID.
func (s *RocketUpdate) SetID(val string) {
	s.ID = val
}

// SetDescription sets the value of Description.
func (s *RocketUpdate) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *RocketUpdate) SetImage(val string) {
	s.Image = val
}

// SetConfig sets the value of Config.
func (s *RocketUpdate) SetConfig(val RocketUpdateConfig) {
	s.Config = val
}

func (*RocketUpdate) updateRocketRes() {}

type RocketUpdateConfig map[string]string

func (s *RocketUpdateConfig) init() RocketUpdateConfig {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

type UpdateAccessReq struct {
	RolledBack   OptBool     `json:"rolled_back"`
	RollbackTime OptDateTime `json:"rollback_time"`
	RequestID    OptUUID     `json:"request_id"`
	Approvals    OptUUID     `json:"approvals"`
}

// GetRolledBack returns the value of RolledBack.
func (s *UpdateAccessReq) GetRolledBack() OptBool {
	return s.RolledBack
}

// GetRollbackTime returns the value of RollbackTime.
func (s *UpdateAccessReq) GetRollbackTime() OptDateTime {
	return s.RollbackTime
}

// GetRequestID returns the value of RequestID.
func (s *UpdateAccessReq) GetRequestID() OptUUID {
	return s.RequestID
}

// GetApprovals returns the value of Approvals.
func (s *UpdateAccessReq) GetApprovals() OptUUID {
	return s.Approvals
}

// SetRolledBack sets the value of RolledBack.
func (s *UpdateAccessReq) SetRolledBack(val OptBool) {
	s.RolledBack = val
}

// SetRollbackTime sets the value of RollbackTime.
func (s *UpdateAccessReq) SetRollbackTime(val OptDateTime) {
	s.RollbackTime = val
}

// SetRequestID sets the value of RequestID.
func (s *UpdateAccessReq) SetRequestID(val OptUUID) {
	s.RequestID = val
}

// SetApprovals sets the value of Approvals.
func (s *UpdateAccessReq) SetApprovals(val OptUUID) {
	s.Approvals = val
}

type UpdateApprovalReq struct {
	Revoked     OptBool     `json:"revoked"`
	RevokedTime OptDateTime `json:"revoked_time"`
	RequestID   OptUUID     `json:"request_id"`
	Requests    OptUUID     `json:"requests"`
}

// GetRevoked returns the value of Revoked.
func (s *UpdateApprovalReq) GetRevoked() OptBool {
	return s.Revoked
}

// GetRevokedTime returns the value of RevokedTime.
func (s *UpdateApprovalReq) GetRevokedTime() OptDateTime {
	return s.RevokedTime
}

// GetRequestID returns the value of RequestID.
func (s *UpdateApprovalReq) GetRequestID() OptUUID {
	return s.RequestID
}

// GetRequests returns the value of Requests.
func (s *UpdateApprovalReq) GetRequests() OptUUID {
	return s.Requests
}

// SetRevoked sets the value of Revoked.
func (s *UpdateApprovalReq) SetRevoked(val OptBool) {
	s.Revoked = val
}

// SetRevokedTime sets the value of RevokedTime.
func (s *UpdateApprovalReq) SetRevokedTime(val OptDateTime) {
	s.RevokedTime = val
}

// SetRequestID sets the value of RequestID.
func (s *UpdateApprovalReq) SetRequestID(val OptUUID) {
	s.RequestID = val
}

// SetRequests sets the value of Requests.
func (s *UpdateApprovalReq) SetRequests(val OptUUID) {
	s.Requests = val
}

type UpdateMissionReq struct {
	Description  OptString   `json:"description"`
	Image        OptString   `json:"image"`
	MinApprovers OptInt      `json:"min_approvers"`
	Rocket       OptString   `json:"rocket"`
	Requests     []uuid.UUID `json:"requests"`
}

// GetDescription returns the value of Description.
func (s *UpdateMissionReq) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *UpdateMissionReq) GetImage() OptString {
	return s.Image
}

// GetMinApprovers returns the value of MinApprovers.
func (s *UpdateMissionReq) GetMinApprovers() OptInt {
	return s.MinApprovers
}

// GetRocket returns the value of Rocket.
func (s *UpdateMissionReq) GetRocket() OptString {
	return s.Rocket
}

// GetRequests returns the value of Requests.
func (s *UpdateMissionReq) GetRequests() []uuid.UUID {
	return s.Requests
}

// SetDescription sets the value of Description.
func (s *UpdateMissionReq) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *UpdateMissionReq) SetImage(val OptString) {
	s.Image = val
}

// SetMinApprovers sets the value of MinApprovers.
func (s *UpdateMissionReq) SetMinApprovers(val OptInt) {
	s.MinApprovers = val
}

// SetRocket sets the value of Rocket.
func (s *UpdateMissionReq) SetRocket(val OptString) {
	s.Rocket = val
}

// SetRequests sets the value of Requests.
func (s *UpdateMissionReq) SetRequests(val []uuid.UUID) {
	s.Requests = val
}

type UpdateRequestReq struct {
	Reason  OptString `json:"reason"`
	Mission OptString `json:"mission"`
}

// GetReason returns the value of Reason.
func (s *UpdateRequestReq) GetReason() OptString {
	return s.Reason
}

// GetMission returns the value of Mission.
func (s *UpdateRequestReq) GetMission() OptString {
	return s.Mission
}

// SetReason sets the value of Reason.
func (s *UpdateRequestReq) SetReason(val OptString) {
	s.Reason = val
}

// SetMission sets the value of Mission.
func (s *UpdateRequestReq) SetMission(val OptString) {
	s.Mission = val
}

type UpdateRocketReq struct {
	Description OptString                `json:"description"`
	Image       OptString                `json:"image"`
	Config      OptUpdateRocketReqConfig `json:"config"`
	Missions    []string                 `json:"missions"`
}

// GetDescription returns the value of Description.
func (s *UpdateRocketReq) GetDescription() OptString {
	return s.Description
}

// GetImage returns the value of Image.
func (s *UpdateRocketReq) GetImage() OptString {
	return s.Image
}

// GetConfig returns the value of Config.
func (s *UpdateRocketReq) GetConfig() OptUpdateRocketReqConfig {
	return s.Config
}

// GetMissions returns the value of Missions.
func (s *UpdateRocketReq) GetMissions() []string {
	return s.Missions
}

// SetDescription sets the value of Description.
func (s *UpdateRocketReq) SetDescription(val OptString) {
	s.Description = val
}

// SetImage sets the value of Image.
func (s *UpdateRocketReq) SetImage(val OptString) {
	s.Image = val
}

// SetConfig sets the value of Config.
func (s *UpdateRocketReq) SetConfig(val OptUpdateRocketReqConfig) {
	s.Config = val
}

// SetMissions sets the value of Missions.
func (s *UpdateRocketReq) SetMissions(val []string) {
	s.Missions = val
}

type UpdateRocketReqConfig map[string]string

func (s *UpdateRocketReqConfig) init() UpdateRocketReqConfig {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}
